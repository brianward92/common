get_script_dir() {
  # If BASH_SOURCE is not set or empty, use $0 instead
  local source="${BASH_SOURCE[1]:-$0}"
  echo "$(cd "$(dirname "$source")" && pwd)"
}

get_shell_config() {
  CURRENT_SHELL=$(basename "$SHELL")
  if [ "$CURRENT_SHELL" = "zsh" ]; then
    echo "$HOME/.zshrc"
  elif [ "$CURRENT_SHELL" = "bash" ]; then
    echo "$HOME/.bashrc"
  else
    echo "Unsupported shell ($CURRENT_SHELL). Please run this script using either bash or zsh."
    exit 1
  fi
}

add_line_to_shell_config() {
  local line="$1"
  local search_pattern="$2"
  local shell_config="$3"

  # Check if the exact line exists in the shell config file
  if ! grep -Fxq "$line" "$shell_config"; then
    # If a similar line exists, update it; otherwise, add a new line
    if grep -Fq "$search_pattern" "$shell_config"; then
      sed -i.bak "/$search_pattern/d" "$shell_config"
      echo "$line" >> "$shell_config"
      echo "Updated line in $shell_config"
    else
      echo "$line" >> "$shell_config"
      echo "Line has been added to $shell_config"
    fi
  else
    echo "Line already exists in $shell_config"
  fi
}

add_alias_to_shell_config() {
  local alias_name=$1
  local script_path=$2
  local shell_config=$3
  local line="alias $alias_name=\"$script_path\""
  local search_pattern="alias $alias_name="

  add_line_to_shell_config "$line" "$search_pattern" "$shell_config"
}

add_env_var_to_shell_config() {
  local var_name=$1
  local var_value=$2
  local shell_config=$3
  local line="export $var_name=\"$var_value\""
  local search_pattern="export $var_name="

  add_line_to_shell_config "$line" "$search_pattern" "$shell_config"
}

handle_error() {
    echo "FAILED"
    exit 1
}
